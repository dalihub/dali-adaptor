# module: graphics, backend: Common
SET( adaptor_graphics_common_src_files
)

# module: graphics, backend: tizen
SET( adaptor_graphics_tizen_src_files
    ${adaptor_graphics_dir}/tizen/vsync-monitor-tizen.cpp
)

# module: graphics, backend: ubuntu
SET( adaptor_graphics_ubuntu_src_files
    ${adaptor_graphics_dir}/ubuntu/vsync-monitor-ubuntu.cpp
)

# module: graphics, backend: gles
SET( adaptor_graphics_gl_src_files
    ${adaptor_graphics_dir}/gles/egl-debug.cpp
    ${adaptor_graphics_dir}/gles/egl-implementation.cpp
    ${adaptor_graphics_dir}/gles/egl-sync-implementation.cpp
    ${adaptor_graphics_dir}/gles/gl-extensions.cpp
    ${adaptor_graphics_dir}/gles/gl-proxy-implementation.cpp
    ${adaptor_graphics_dir}/gles/egl-graphics-factory.cpp
    ${adaptor_graphics_dir}/gles/egl-graphics.cpp
)

SET( adaptor_graphics_gl_ubuntu_src_files
    ${adaptor_graphics_dir}/ubuntu/egl-image-extensions-ubuntu.cpp
)

SET( adaptor_graphics_gl_tizen_src_files
    ${adaptor_graphics_dir}/tizen/egl-image-extensions-tizen.cpp
)

SET( adaptor_graphics_vulkan_src_files
    ${adaptor_graphics_dir}/vulkan/graphics-implementation.cpp
    ${adaptor_graphics_dir}/vulkan/vulkan-graphics-factory.cpp
    ${adaptor_graphics_dir}/vulkan/vulkan-device.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-graphics-controller.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-framebuffer-impl.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-image-impl.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-image-view-impl.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-memory-impl.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-queue-impl.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-surface.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-surface-impl.cpp
    ${adaptor_graphics_dir}/vulkan-impl/vulkan-swapchain-impl.cpp
)

SET( unused
    ${adaptor_graphics_dir}/vulkan/api/internal/vulkan-api-debug.cpp
    ${adaptor_graphics_dir}/vulkan/api/internal/vulkan-api-descriptor-set-allocator.cpp
    ${adaptor_graphics_dir}/vulkan/api/internal/vulkan-api-descriptor-set-requirements.cpp
    ${adaptor_graphics_dir}/vulkan/api/internal/vulkan-api-pipeline-impl.cpp
    ${adaptor_graphics_dir}/vulkan/api/internal/vulkan-pipeline-cache-debug.cpp
    ${adaptor_graphics_dir}/vulkan/api/internal/vulkan-pipeline-cache.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-buffer-factory.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-buffer.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-controller.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-framebuffer-factory.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-framebuffer.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-pipeline-factory.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-pipeline.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-render-command.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-sampler-factory.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-sampler.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-shader-factory.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-shader.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-texture-factory.cpp
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-texture.cpp
    ${adaptor_graphics_dir}/vulkan/internal/spirv/vulkan-spirv.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-buffer.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-command-buffer.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-command-pool.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-debug-allocator.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-debug.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-fence.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-framebuffer.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-image-view.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-sampler.cpp
    ${adaptor_graphics_dir}/vulkan/internal/vulkan-shader.cpp
)

# module: graphics, backend: vulkan/x11
SET( adaptor_graphics_vulkan_x11_src_files
    ${adaptor_graphics_dir}/vulkan/x11/vk-surface-xlib2xcb.cpp

# Should be using one of these, but nVidia doesn't(didn't?) work properly
#    ${adaptor_graphics_dir}/vulkan/x11/vk-surface-xcb.cpp
#    ${adaptor_graphics_dir}/vulkan/x11/vk-surface-xlib.cpp
)

# module: graphics, backend: vulkan/wayland
SET( adaptor_graphics_vulkan_wayland_src_files
    ${adaptor_graphics_dir}/vulkan/wayland/vk-surface-wayland.cpp
)

SET( adaptor_graphics_vulkan_tizen_src_files
    ${adaptor_graphics_dir}/vulkan/api/vulkan-api-native-texture.cpp
)
